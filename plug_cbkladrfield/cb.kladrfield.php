<?php
/**
 * Joomla Community Builder KLADR Field Type Plugin: plug_cbkladrfield
 * @version $Id$
 * @package plug_cbkladrfield
 * @subpackage cb.kladrfield.php
 * @author Pavel Alexeev
 * @copyright (C) 2010 http://hubbitus.info
 * @license Limited http://www.gnu.org/licenses/old-licenses/gpl-2.0.html GNU/GPL version 2
 * @final 0.1
 */

/** ensure this file is being included by a parent file */
if (!(defined('_VALID_CB') || defined('_JEXEC') || defined('_VALID_MOS'))) {
	die('Direct Access to this location is not allowed.');
}

global $_PLUGINS;
$_PLUGINS->loadPluginGroup('user', array((int)1));
$_PLUGINS->registerUserFieldTypes(array('kladrfield' => 'CBfield_kladr'));
$_PLUGINS->registerUserFieldParams();

class CBfield_kladr extends CBfield_text
{
	/**
	 * Returns a field in specified format
	 *
	 * @param  moscomprofilerFields $field
	 * @param  moscomprofilerUser $user
	 * @param  string $output 'html', 'xml', 'json', 'php', 'csvheader', 'csv', 'rss', 'fieldslist', 'htmledit'
	 * @param  string $reason 'profile' for user profile view, 'edit' for profile edit, 'register' for registration, 'list' for user-lists
	 * @param  int $list_compare_types IF reason == 'search' : 0 : simple 'is' search, 1 : advanced search with modes, 2 : simple 'any' search
	 * @return mixed
	 */
	function getField(&$field, &$user, $output, $reason, $list_compare_types)
	{
		global $_CB_framework, $ueConfig, $_CB_database;

//		$oReturn = null;
//		return '<b>KLADR dumb field content</b>';
		return parent::getField( $field, $user, $output, $reason, $list_compare_types );

//		return $oReturn;
	}

	function _fieldEditToHtml(&$field, &$user, $reason, $tag, $type, $value, $additional, $allValues = null, $displayFieldIcons = true, $classes = null)
	{
		global $_CB_framework;

		$_CB_framework->document->addHeadStyleSheet('/components/com_comprofiler/plugin/user/plug_cbkladrfield/css/jquery.kladr.min.css', true);
		$_CB_framework->document->addHeadStyleSheet('/components/com_comprofiler/plugin/user/plug_cbkladrfield/css/example4.css', false);
		$_CB_framework->document->addHeadScriptUrl('/components/com_comprofiler/plugin/user/plug_cbkladrfield/js/jquery-1.10.2.js', true);
		$_CB_framework->document->addHeadScriptUrl('/components/com_comprofiler/plugin/user/plug_cbkladrfield/js/jquery.kladr.js', false, null);
		$_CB_framework->document->addHeadScriptUrl('/components/com_comprofiler/plugin/user/plug_cbkladrfield/js/kladr-init.js', false, "window.kladr_field_id = '{$field->name}';", 'jqKladr = jQuery.noConflict(true);');

		$styles = '';
		if ('hide' == $field->params->get('partStreet', 'hide')){
			$styles .= "\n#" . $field->name . '-panel div.ffield.street { display: none; }';
			$styles .= "\n#" . $field->name . '-panel div.ffield.building { display: none; }';
			$styles .= "\n#" . $field->name . '-panel div.ffield.building-add { display: none; }';
		}
		else{
			if ('hide' == $field->params->get('partBuilding', 'hide')){
				$styles .= "\n#" . $field->name . '-panel div.ffield.building { display: none; }';
				$styles .= "\n#" . $field->name . '-panel div.ffield.building-add { display: none; }';
			}
			else{
				if ('hide' == $field->params->get('partSubBuilding', 'hide')){
					$styles .= "\n#" . $field->name . '-panel div.ffield.building-add { display: none; }';
				}
			}
		}

		if ('hide' == $field->params->get('showMap', 'hide')){
			$styles .= "\n#" . $field->name . '-panel div.ffield.map { display: none; }';
		}
		if ('hide' == $field->params->get('showMap', 'hide')){
			$styles .= "\n#" . $field->name . '-panel div.addition { display: none; }';
		}
		$_CB_framework->document->addHeadStyleInline($styles);

//		$field->readonly = true;
		$res = parent::_fieldEditToHtml($field, $user, $reason, $tag, 'text', $value, $additional, $allValues, $displayFieldIcons, $classes); // TODO: Change the autogenerated stub


		return $res . str_replace(
						'{KLADR_ID}'
						,$field->name
						,file_get_contents($_CB_framework->getCfg( 'absolute_path' ) . '/components/com_comprofiler/plugin/user/plug_cbkladrfield/views/template.html')
					);
	}
}
?>